{"version":3,"sources":["pages/home.js","components/root_category.js","pages/xic-codes.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","to","TextOnlyTooltip","withStyles","tooltip","color","backgroundColor","Tooltip","useStyles","makeStyles","theme","reactFrag","border","rootXic","marginTop","cursor","width","borderRadius","margin","fontWeight","fontFamily","fontSize","childXic","paddingLeft","spacing","borderLeft","marginLeft","fontStyle","childSic2007","padding","RootCategory","props","parentID","classes","root","XicData","Sic2007Codes","useState","showChildren","setShowChildren","matchingParent","_","filter","xic","get","id","parent_ids","Fragment","className","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","map","sortBy","indexOf","childrenFor","child","key","secondary","length","sic","name","sicCode","padStart","title","Button","XicCodes","roots","isEmpty","Routes","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4m2EAIe,SAASA,IACpB,OACI,6BACI,yCAIA,kBAAC,IAAD,CAAMC,GAAG,cAAT,c,8ICANC,EAAkBC,YAAW,CACjCC,QAAS,CACPC,MAAO,QACPC,gBAAiB,gBAHGH,CAKrBI,KAEGC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,OAAQ,kBAGVC,QAAS,CACPC,UAAW,EACXC,OAAQ,UACRC,MAAO,MACPJ,OAAQ,iBACRP,MAAO,UACPY,aAAc,MACdC,OAAQ,OAER,wBAAyB,CACvBC,WAAY,OACZd,MAAO,UACPe,WAAY,UACZC,SAAU,SAIdC,SAAU,CACRC,YAAab,EAAMc,QAAQ,GAC3BR,MAAO,MACPE,OAAQ,OAER,0BAA2B,CACzBE,WAAY,UACZK,WAAY,aAEd,6BAA8B,CAC5BJ,SAAU,OACVK,WAAY,QAEd,+BAAgC,CAC9BC,UAAW,SACXR,WAAY,QACZE,SAAU,OACVK,WAAY,SAIhBE,aAAc,CACZL,YAAab,EAAMc,QAAQ,GAC3BR,MAAO,MACPE,OAAQ,OACRH,OAAQ,UACRc,QAAS,MAET,6BAA8B,CAC5BV,WAAY,OACZd,MAAO,UACPe,WAAY,WAEd,+BAAgC,CAC9BO,UAAW,SACXtB,MAAO,UACPe,WAAY,gBAKH,SAASU,EAAaC,GACnC,IAgBwBC,EAhBlBC,EAAUzB,IAER0B,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,QAASC,EAAiBL,EAAjBK,aAHmB,EAKFC,oBAAS,GALP,mBAKnCC,EALmC,KAKrBC,EALqB,KAapCC,EAAiBC,IAAEC,OAAOP,GAAS,SAACQ,GACxC,OAAOF,IAAEG,IAAID,EAAIE,KAAOV,EAAQW,eAWlC,OACE,kBAAC,IAAMC,SAAP,CAAgBC,UAAWf,EAAQtB,WACjC,kBAACsC,EAAA,EAAD,CACEC,QAAM,EACNF,UAAWf,EAAQpB,QACnBsC,QAAS,WACPZ,GAAiBD,KAGnB,kBAACc,EAAA,EAAD,CAAcC,QAASZ,IAAEG,IAAIV,EAAM,UAAW,aAC7CI,EAAe,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAGnC,kBAACgB,EAAA,EAAD,CAAUC,GAAIjB,EAAckB,QAAQ,OAAOC,eAAa,GACtD,kBAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,gBAAc,GACjCnB,IAAEoB,KAvBa7B,EAuBME,EAAKW,GAtB1BJ,IAAEqB,OAXS,SAAC9B,GACnB,OAAOS,IAAEC,OAAOP,GAAS,SAACQ,GACxB,OAAOF,IAAEsB,QAAQtB,IAAEG,IAAID,EAAK,aAAc,IAAKX,IAAa,KAS9CgC,CAAYhC,GAAW,CACrC,SAACW,GACC,OAAOF,IAAEG,IAAID,EAAK,UAAW,YAoBK,SAACsB,GAAD,OAC9B,kBAAC,IAAMlB,SAAP,CAAgBmB,IAAKD,EAAMpB,IACzB,kBAACI,EAAA,EAAD,CAAUD,UAAWf,EAAQX,UAC3B,kBAAC8B,EAAA,EAAD,CACEC,QAASZ,IAAEG,IAAIqB,EAAO,UAAW,WACjCE,UAAS,UACP1B,IAAEG,IAAIqB,EAAO,YAAa,IAAIG,OADvB,iBAMb,kBAACV,EAAA,EAAD,KACGjB,IAAEoB,IAAIpB,IAAEG,IAAIqB,EAAO,YAAa,KAAK,SAACI,GACrC,IAAMC,EAAOlC,EAAaiC,GACpBE,EAAU9B,IAAE+B,SAASH,EAAK,EAAG,KAEnC,OACE,kBAACpB,EAAA,EAAD,CAAUC,QAAM,EAACF,UAAWf,EAAQL,cAClC,kBAACwB,EAAA,EAAD,CAAcC,QAASiB,EAAMH,UAAWI,IACxC,kBAACrE,EAAD,CAAiBuE,MAAM,WACrB,kBAACC,EAAA,EAAD,KAASlC,gBCnIjC,IAAMhC,EAAYC,aAAW,SAACC,GAAD,MAAY,MAG1B,SAASiE,IACJnE,IAAhB,IAEMoE,EAAQnC,IAAEC,OAAOP,GAAS,SAACQ,GAC7B,OAAOF,IAAEoC,QAAQpC,IAAEG,IAAID,EAAK,aAAc,QAG9C,OACI,6BACI,yCAIA,kBAAC,IAAD,CAAM1C,GAAG,KAAT,aAIA,kBAACyD,EAAA,EAAD,KAEQjB,IAAEoB,IAAIe,GAAO,SAAC1C,GAAD,OACT,kBAACJ,EAAD,CACIoC,IAAMhC,EAAKW,GACXX,KAAOA,EACPC,QAAUA,EACVC,aAAeA,SC/B3C,IASe0C,EATA,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIrB,UAAW3D,IACjC,kBAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,aAAarB,UAAWgB,MCSvCM,MAdf,WACE,OACI,6BACE,2CAIA,kBAAC,IAAD,KACE,kBAAC,EAAD,SCDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.35e93794.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {  } from '@material-ui/core';\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>\n                Home page\n            </h1>\n\n            <Link to='/xic-codes'>\n                XIC codes\n            </Link>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Collapse, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport _ from \"lodash\";\n\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\n\nconst TextOnlyTooltip = withStyles({\n  tooltip: {\n    color: \"black\",\n    backgroundColor: \"transparent\",\n  },\n})(Tooltip);\n\nconst useStyles = makeStyles((theme) => ({\n  reactFrag: {\n    border: \"1px solid #ddd\",\n  },\n\n  rootXic: {\n    marginTop: 5,\n    cursor: \"pointer\",\n    width: \"75%\",\n    border: \"1px solid #ddd\",\n    color: \"#666666\",\n    borderRadius: \"2px\",\n    margin: \"auto\",\n\n    \"& .MuiTypography-root\": {\n      fontWeight: \"bold\",\n      color: \"#666666\",\n      fontFamily: \"Calibri\",\n      fontSize: \"18px\",\n    },\n  },\n\n  childXic: {\n    paddingLeft: theme.spacing(6),\n    width: \"75%\",\n    margin: \"auto\",\n\n    \"& .MuiListItemText-root\": {\n      fontFamily: \"Calibri\",\n      borderLeft: \"1px solid\",\n    },\n    \"& .MuiListItemText-primary\": {\n      fontSize: \"15px\",\n      marginLeft: \"10px\",\n    },\n    \"& .MuiListItemText-secondary\": {\n      fontStyle: \"Italic\",\n      fontWeight: \"light\",\n      fontSize: \"14px\",\n      marginLeft: \"10px\",\n    },\n  },\n\n  childSic2007: {\n    paddingLeft: theme.spacing(8),\n    width: \"75%\",\n    margin: \"auto\",\n    cursor: \"default\",\n    padding: \"0px\",\n\n    \"& .MuiListItemText-primary\": {\n      fontWeight: \"bold\",\n      color: \"#666666\",\n      fontFamily: \"Calibri\",\n    },\n    \"& .MuiListItemText-secondary\": {\n      fontStyle: \"italic\",\n      color: \"#666666\",\n      fontFamily: \"Calibri\",\n    },\n  },\n}));\n\nexport default function RootCategory(props) {\n  const classes = useStyles();\n\n  const { root, XicData, Sic2007Codes } = props;\n\n  const [showChildren, setShowChildren] = useState(false);\n\n  const childrenFor = (parentID) => {\n    return _.filter(XicData, (xic) => {\n      return _.indexOf(_.get(xic, \"parent_ids\", []), parentID) > -1;\n    });\n  };\n\n  const matchingParent = _.filter(XicData, (xic) => {\n    return _.get(xic.id === XicData.parent_ids);\n  });\n\n  const sortedChildren = (parentID) => {\n    return _.sortBy(childrenFor(parentID), [\n      (xic) => {\n        return _.get(xic, \"name.en\", \"abc\");\n      },\n    ]);\n  };\n\n  return (\n    <React.Fragment className={classes.reactFrag}>\n      <ListItem\n        button\n        className={classes.rootXic}\n        onClick={() => {\n          setShowChildren(!showChildren);\n        }}\n      >\n        <ListItemText primary={_.get(root, \"name.en\", \"UNKNOWN\")} />\n        {showChildren ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n\n      <Collapse in={showChildren} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {_.map(sortedChildren(root.id), (child) => (\n            <React.Fragment key={child.id}>\n              <ListItem className={classes.childXic}>\n                <ListItemText\n                  primary={_.get(child, \"name.en\", \"UNKNOWN\")}\n                  secondary={`${\n                    _.get(child, \"sic_codes\", []).length\n                  } SIC codes`}\n                />\n              </ListItem>\n\n              <List>\n                {_.map(_.get(child, \"sic_codes\", []), (sic) => {\n                  const name = Sic2007Codes[sic];\n                  const sicCode = _.padStart(sic, 5, \"0\");\n\n                  return (\n                    <ListItem button className={classes.childSic2007}>\n                      <ListItemText primary={name} secondary={sicCode} />\n                      <TextOnlyTooltip title=\"parents\">\n                        <Button>{matchingParent}</Button>\n                      </TextOnlyTooltip>\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </React.Fragment>\n          ))}\n        </List>\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _ from 'lodash';\n\nimport XicData from '../data/xic-ids.json';\nimport Sic2007Codes from '../data/sic_2007_condensed_list_en.json';\nimport RootCategory from '../components/root_category';\n\nconst useStyles = makeStyles((theme) => ({\n}));\n\nexport default function XicCodes() {\n    const classes = useStyles();\n\n    const roots = _.filter(XicData, (xic) => {\n        return _.isEmpty(_.get(xic, 'parent_ids', []));\n    });\n\n    return (\n        <div>\n            <h1>\n                XIC Codes\n            </h1>\n\n            <Link to='/'>\n                Home page\n            </Link>\n\n            <List>\n                {\n                    _.map(roots, (root) => (\n                        <RootCategory\n                            key={ root.id }\n                            root={ root }\n                            XicData={ XicData }\n                            Sic2007Codes={ Sic2007Codes }\n                        />\n                    ))\n                }\n            </List>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/home';\nimport XicCodes from './pages/xic-codes';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/xic-codes' component={XicCodes} />\n        </Switch>\n    )\n}\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n      <div>\n        <h1>\n          XIC Mapping\n        </h1>\n\n        <Router>\n          <Routes />\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}